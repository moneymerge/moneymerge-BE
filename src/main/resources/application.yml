spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # 카카오 로그인 요청 uri
            token-uri: https://kauth.kakao.com/oauth/token # 토큰을 발급받기 위한 uri
            user-info-uri: https://kapi.kakao.com/v2/user/me # 유저 정보를 받아오기 위한 uri
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 로그인 요청 uri
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 발급받기 위한 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me # 유저 정보를 받아오기 위한 uri
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth # 네이버 로그인 요청 uri
            token-uri: https://oauth2.googleapis.com/token # 토큰을 발급받기 위한 uri
            user-info-uri: https://www.googleapis.com/drive/v2/files # 유저 정보를 받아오기 위한 uri
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID} # REST API Key
            client-secret: ${KAKAO_CLIENT_SECRET} # Client Secret Key
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/auth/kakao/callback # Redirect URI
          naver:
            client-id: ${NAVER_CLIENT_ID} # Client ID
            client-secret: ${NAVER_CLIENT_SECRET} # Client Secret
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/auth/naver/callback # Redirect URL
            scope:
              - email
              - nickname
              - profileUrl
          google:
            client-id: ${GOOGLE_CLIENT_ID} # Client ID
            client-secret: ${GOOGLE_CLIENT_SECRET} # Client Secret
            client-authentication-method: GET
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/auth/google/callback # Redirect URL
            scope:
              - email
              - nickname
              - profileUrl

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
    defer-datasource-initialization: true
    sql:
      init:
        mode: always
        encoding: UTF-8

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

logging:
  level:
    org.hibernate.SQL: debug

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    credentials:
      access-key: ${BUCKET_ACCESS_KEY}
      secret-key: ${BUCKET_SECRET_KEY}
    region:
      static: ap-northeast-2

default:
  image:
    url: s3://moneymerge/profile/default_profile_image.jpg